<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <name>Asakusa on M3BP Runtime Library</name>
  <artifactId>asakusa-m3bp-runtime</artifactId>
  <parent>
    <artifactId>project</artifactId>
    <groupId>com.asakusafw.m3bp.bridge</groupId>
    <version>0.2.0-SNAPSHOT</version>
  </parent>

  <packaging>jar</packaging>

  <properties>
    <CMAKE_BUILD_TYPE>Release</CMAKE_BUILD_TYPE>
    <CMAKE_TOOLCHAIN_FILE />
    <make.parallel />
    <m3bp.location>${basedir}/../../m3bp</m3bp.location>
    <m3bp.version />
  </properties>
  <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>javah-bridge</id>
                <phase>compile</phase>
                <goals>
                  <goal>javah</goal>
                </goals>
                <configuration>
                  <javahPath>${env.JAVA_HOME}/bin/javah</javahPath>
                  <javahClassNames>
                    <javahClassName>com.asakusafw.m3bp.mirror.jni.EngineMirrorImpl</javahClassName>
                    <javahClassName>com.asakusafw.m3bp.mirror.jni.ConfigurationMirrorImpl</javahClassName>
                    <javahClassName>com.asakusafw.m3bp.mirror.jni.FlowGraphMirrorImpl</javahClassName>
                    <javahClassName>com.asakusafw.m3bp.mirror.jni.VertexMirrorImpl</javahClassName>
                    <javahClassName>com.asakusafw.m3bp.mirror.jni.TaskMirrorImpl</javahClassName>
                    <javahClassName>com.asakusafw.m3bp.mirror.jni.InputReaderMirrorImpl</javahClassName>
                    <javahClassName>com.asakusafw.m3bp.mirror.jni.OutputWriterMirrorImpl</javahClassName>
                    <javahClassName>com.asakusafw.m3bp.mirror.jni.InputReaderMirrorUnsafe</javahClassName>
                    <javahClassName>com.asakusafw.m3bp.mirror.jni.OutputWriterMirrorUnsafe</javahClassName>
                  </javahClassNames>
                  <javahOutputDirectory>${project.build.directory}/native/include</javahOutputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>cmake-core</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                    <mkdir dir="${project.build.directory}/native/core" />
                    <exec executable="cmake" dir="${project.build.directory}/native/core" failonerror="true">
                      <arg value="-G" />
                      <arg value="Unix Makefiles" />
                      <arg value="-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}" unless:blank="${CMAKE_BUILD_TYPE}" />
                      <arg value="-DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}" unless:blank="${CMAKE_TOOLCHAIN_FILE}" />
                      <arg value="-DCMAKE_SKIP_RPATH=ON" />
                      <arg value="${m3bp.location}/src" />
                    </exec>
                    <mkdir dir="${project.build.directory}/native/lib" />
                    <exec executable="make" dir="${project.build.directory}/native/core" failonerror="true">
                      <arg value="-j${make.parallel}" unless:blank="${make.parallel}" />
                    </exec>
                    <copy todir="${project.build.directory}/native/lib" flatten="true">
                      <fileset dir="${project.build.directory}/native/core" followsymlinks="true">
                        <include name="**/libm3bp.so" /> <!-- is symlink but copied as a regular file by Ant -->
                        <include name="**/libm3bp.so.*" />
                        <include name="**/libm3bp.dylib" />
                        <include name="**/libm3bp.*.dylib" />
                        <include name="**/m3bp.dll" />
                      </fileset>
                    </copy>
                    <echo message="${m3bp.version}" encoding="utf-8" file="${project.build.directory}/native/lib/m3bp.version" unless:blank="${m3bp.version}" />
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>cmake-bridge</id>
                <phase>compile</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                    <mkdir dir="${project.build.directory}/native/bridge" />
                    <exec executable="cmake" dir="${project.build.directory}/native/bridge" failonerror="true">
                      <arg value="-G" />
                      <arg value="Unix Makefiles" />
                      <arg value="-DJNI_HEADER_DIR:string=${project.build.directory}/native/include" />
                      <arg value="-DCUSTOM_LIBRARIES_DIR:string=${project.build.directory}/native/lib" />
                      <arg value="-DM3BP_INCLUDE_DIR:string=${m3bp.location}/include" />
                      <arg value="-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}" unless:blank="${CMAKE_BUILD_TYPE}" />
                      <arg value="-DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}" unless:blank="${CMAKE_TOOLCHAIN_FILE}" />
                      <arg value="-DCMAKE_SKIP_RPATH=ON" />
                      <arg value="${basedir}/src/main/native" />
                    </exec>
                    <exec executable="make" dir="${project.build.directory}/native/bridge" failonerror="true">
                      <arg value="-j${make.parallel}" unless:blank="${make.parallel}" />
                    </exec>
                    <mkdir dir="${project.build.directory}/native/lib" />
                    <copy todir="${project.build.directory}/native/lib" flatten="true">
                      <fileset dir="${project.build.directory}/native/bridge">
                        <include name="**/libm3bpjni.so" />
                        <include name="**/libm3bpjni.dylib" />
                        <include name="**/m3bpjni.dll" />
                      </fileset>
                    </copy>
                    <delete>
                      <fileset dir="${project.build.directory}/native/lib">
                        <include name="libm3bp.so" /> <!-- for only link from m3bpjni -->
                        <include name="libm3bp.dylib" /> <!-- for only link from m3bpjni -->
                      </fileset>
                    </delete>
                    <exec executable="${basedir}/src/main/native/bin/mac_post_compile.sh" osfamily="mac" failonerror="true">
                      <arg value="${project.build.directory}/native/lib" />
                    </exec>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>create-distribution</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>src/main/assembly/native.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>native-test</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <!-- On macos, use -Djava.library.path instead of LD_LIBRARY_PATH, and it cannot be set in systemPropertyVariables -->
              <argLine>-Djava.library.path=${project.build.directory}/native/lib${path.separator}</argLine>
              <environmentVariables>
                <LD_LIBRARY_PATH>${project.build.directory}/native/lib${path.separator}${env.LD_LIBRARY_PATH}</LD_LIBRARY_PATH>
              </environmentVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>cmake-bridge-test</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                    <mkdir dir="${project.build.directory}/native/test" />
                    <exec executable="cmake" dir="${project.build.directory}/native/test" failonerror="true">
                      <arg value="-G" />
                      <arg value="Unix Makefiles" />
                      <arg value="-DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}" unless:blank="${CMAKE_TOOLCHAIN_FILE}" />
                      <arg value="${basedir}/src/test/native" />
                    </exec>
                    <exec executable="make" dir="${project.build.directory}/native/test" failonerror="true" />
                    <copy todir="${project.build.directory}" flatten="true">
                      <fileset dir="${project.build.directory}/native/test">
                        <include name="**/libtest.so" />
                        <include name="**/libtest.dylib" />
                        <include name="**/test.dll" />
                      </fileset>
                    </copy>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <excludeFilterFile>src/conf/findbugs/exclude.xml</excludeFilterFile>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.asakusafw.dag.runtime</groupId>
      <artifactId>asakusa-dag-api</artifactId>
      <version>${asakusafw-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>com.asakusafw.lang.utils</groupId>
      <artifactId>asakusa-lang-buffer</artifactId>
      <version>${asakusafw-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
    </dependency>
    <dependency>
      <groupId>com.asakusafw</groupId>
      <artifactId>simple-graph</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
